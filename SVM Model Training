%cd C:\Users\91901\Desktop\Aditya\Learning\LinkedIN\Applied Machin Learning Algorithms
from sklearn.svm import SVC
import joblib
import pandas as pd
from sklearn.svm import SVC
from sklearn.model_selection import GridSearchCV
import warnings
warnings.filterwarnings('ignore',category= FutureWarning)
warnings.filterwarnings('ignore',category= DeprecationWarning)

tr_features=pd.read_csv('train_features.csv')
tr_labels = pd.read_csv('train_labels.csv')


def print_results(results):
    print('BEST PARAMS: {}\n'.format(results.best_params_))

    means = results.cv_results_['mean_test_score']
    stds = results.cv_results_['std_test_score']
    for mean, std, params in zip(means, stds, results.cv_results_['params']):
        print('{} (+/-{}) for {}'.format(round(mean, 3), round(std * 2, 3), params))
        
 svc= SVC()
parameters={
    'C':[0.1,1,10],
    'kernel':['linear','rbf']
}
cv= GridSearchCV(svc,parameters,cv=5)
cv.fit(tr_features,tr_labels.values.ravel())
print_results(cv)

joblib.dump(cv.best_estimator_,'svm_model.pkl')
